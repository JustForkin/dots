[general]
# List of accounts to be synced, separated by a comma
accounts = Work
# no output from running offlineimap
ui = quiet

[Account Work]
# local <- sync -> remote
localrepository = Work-Local
remoterepository = Work-Remote
# Status cache. Default is plain, which eventually becomes huge and slow.
# status saved in ~/.offlineimap/
status_backend = sqlite
# Minutes between syncs
#autorefresh = 10
# one can use cron instead

[Repository Work-Local]
# offlineimap only supports maildir for local repositories.
type = Maildir
localfolders = ~/mail
# deleting ~/mail alone results in deleting all mails in server side as well!!!
# directory ~/.offlineimap has to be deleted together if a full reset is needed
nametrans = lambda f: re.sub('Deleted', 'Deleted Items', re.sub('Sent', 'Sent Items', f))

[Repository Work-Remote]
# Remote repos can be IMAP or Gmail, the latter being a preconfigured IMAP.
type = IMAP
ssl = yes
remotehost = exchange.usd.edu
remoteuser = jing.liu
# get password from ~/.netrc
# keep connection with server
#holdconnectionopen = true
#keepalive = 60
# http://docs.offlineimap.org/en/latest/FAQ.html#how-do-i-generate-an-sslcacertfile-file
# $ openssl s_client -connect exchange.usd.edu:imaps -showcerts
# save all output in between BEGINs and ENDs to usd.crt
#sslcacertfile = /etc/ssl/certs/usd.crt
# exchange.usd.edu does not accept sslcacertfile, it requires fingerprint.
# enable ssl without any cert or fingerprint, run offlineimap, 
# copy the fingerprint from the output
cert_fingerprint = f2a0ec8e4570afbd0f5321af4a5d03c26e827476

# only sync the following remote folders
# http://docs.offlineimap.org/en/latest/nametrans.html
#folderfilter = lambda folder: folder in ["INBOX", "Drafts", "Archive", "Deleted Items","Travel","Plasma","Finance","Fund","Outreach","Career","Family","Teaching","Lab","Gina","Service","Publication","761"]
# skip syncing the following folders
folderfilter = lambda f: not re.search('(^Junk|^RSS|^Sync|^Ta|^Co|^Cal|^Jo|^No|^Ou)', f)
# shorten remote folders' names
nametrans = lambda folder: re.sub(' Items.*$', '', folder)
