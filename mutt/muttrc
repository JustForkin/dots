# press <F1> in mutt to invoke manual in less
# _____________________________________________________________________________
# read mail

# folders
set mbox_type = Maildir # format of the mail folder
# http://dev.mutt.org/trac/wiki/MuttGuide/Folders
set folder = "~/mail" # define root folder
set spoolfile = "+INBOX" # startup folder
set postponed = "+Drafts" # folder of drafts
set mbox = "+Archive" # folder to archive old mails
# those local folders are synced with remote server by offlineimap
# changes in mutt won't be saved to these folders unless $ is pressed or quit
set sleep_time=0 # skip messages showed after each operation to fasten mutt
macro index,pager d "<save-message>+Trash<enter><sync-mailbox>" "Trash mail"
macro index,pager - "<delete-message><sync-mailbox>" "Delete mail"
macro index,pager a "<save-message>+Archive<enter><sync-mailbox>" "Archive mail" 

set check_new = yes
mailboxes +INBOX # check INBOX for new mail
# Any key stroke in mutt invokes updating fold status. If you type often, the
# fold will be also checked often, which may not be necessary. mail_check
# specify the minimal time interval for updating folds. If you set it to 10,
# mutt won't update folder in 10 second even if you press keys within this 10
# second.
set mail_check = 0 # update fold whenever there is a key stroke
set timeout = 1 # update fold every 1 sec even if there is no key stroke

# index
unset mark_old # don't mark unread mail as old
folder-hook . "exec collapse-all" # collapse thread by default
set nocollapse_unread # no collapse of thread with unread mails

# pager
set pager_stop # don't go to next when browsing current mail using PgUp & PgDn
set pager_index_lines = 9 # show 5 mails in the list above currently open mail
set delete # purge mails marked to delete when quit or change folder
set confirmappend = no # don't ask when appending emails to a folder
set menu_scroll             # scroll in menus
set tilde                   # show tildes like in vim
set nomarkers               # no ugly plus signs
set smart_wrap # don't break words when wrapping lines (sometimes doesn't work)

# _____________________________________________________________________________
# write mail

# sendmail itself is a mail server, it is too heavy
# msmtp is newer than ssmtp; ssmtp is not maintained anymore
# msmtp itself cannot send mail, it uses an existing mail server to do it
# ~/.msmtprc is needed
set sendmail="/usr/sbin/msmtp"
set from="jing.liu@usd.edu" # otherwise does not work
set realname="Jing LIU"
set include   # include original email in the reply
set query_format = "%4c %t %-25.25a %-25.25n"
set fast_reply  # skip editing receivers and title before editing message
set forward_quote = no  # do not quote forwarded message
set fcc_attach    # save attachments with the body
unset mime_forward   # forward attachments as part of body
set forward_format="FW:%s"
# http://dev.mutt.org/trac/wiki/MuttFaq/Folder
folder-hook . 'set record="^"' # keep sent mail in the original thread
set text_flowed # http://wcm1.web.rice.edu/mutt-tips.html

# _____________________________________________________________________________
# appearance

source ~/.mutt/color
set sort = threads
set sort_aux = reverse-last-date-received
set sort_re # thread based on reply_regexp

# header
ignore *
unignore from: date subject to cc
hdr_order From To Cc Date

# _____________________________________________________________________________
# attachment
set mailcap_path = ~/.mutt/mailcap
auto_view text/html text/enriched
#auto_view application/x-gunzip application/postscript image/gif application/x-tar-gz
mime_lookup application/octet-stream

#______________________________________________________________________________
# contacts

# one can directly communicate with google contacts from the command line, eg.
# https://pypi.python.org/pypi/goobook/ (python) and
# http://piao-tech.blogspot.com/2010/01/google-contacts-in-mutt.html (Ruby)
# or export selected contacts from google contacts to outlook or vCard formats
# and then use some scripts to convert them to abook format, eg.
# https://code.google.com/p/gmail-abook-contact-converter/
# goobook does not work for me because the password sent to google cannot be 
# recognized. The last script worked, but it dumps contacts to stdout. If I pipe
# it to a file, error happens.
set query_command ="abook --mutt-query '%s'"
bind editor <Tab> complete-query # very useful
# overwrite default create-alias key a:
macro index,pager A "<pipe-message>abook --add-email-quiet<return>" "add sender"
# add new key M:
macro generic,index,pager M "<shell-escape>abook<return>" "launch abook"
